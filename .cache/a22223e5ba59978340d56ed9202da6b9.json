{"dependencies":[{"name":"./utils","loc":{"line":3,"column":20}},{"name":"./helpers/bind","loc":{"line":4,"column":19}},{"name":"./core/Axios","loc":{"line":5,"column":20}},{"name":"./defaults","loc":{"line":6,"column":23}},{"name":"./cancel/Cancel","loc":{"line":39,"column":23}},{"name":"./cancel/CancelToken","loc":{"line":40,"column":28}},{"name":"./cancel/isCancel","loc":{"line":41,"column":25}},{"name":"./helpers/spread","loc":{"line":47,"column":23}}],"generated":{"js":"'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n"},"hash":"6d0515fcef67236ccca812a60989068b"}